package com.github.abel533.drools.firealarm;

rule "Status output when things are ok"
when
    not Alarm()
    not Sprinkler( on == true )
then
    System.out.println( "Everything is ok" );
end

rule "Raise the alarm when we have one or more fires"
when
    exists Fire()
then
    insert( new Alarm() );
    System.out.println( "Raise the alarm" );
end

rule "When there is a fire turn on the sprinkler"
when
    exists Alarm()
    Fire($room : room)
    $sprinkler : Sprinkler( room == $room, on == false )
then
    modify( $sprinkler ) { setOn( true ) };
    System.out.println( "Turn on the sprinkler for room " + $room.getName() );
end

rule "When the fire is gone turn off the sprinkler"
when
    $room : Room( )
    $sprinkler : Sprinkler( room == $room, on == true )
    not Fire( room == $room )
then
    modify( $sprinkler ) { setOn( false ) };
    System.out.println( "Turn off the sprinkler for room " + $room.getName() );
end

rule "Cancel the alarm when all the fires have gone"
//activation-group 会使得本规则集中，只有该组（activation-group 'cancel'）中第一个规则会被调用
activation-group 'cancel'
//no-loop false
//no-loop false 和 update( $alarm ) 组合，会无限循环调用本规则
when
    not Fire()
    $alarm : Alarm()
then
//    delete( $alarm );
//    update( $alarm )
    System.out.println( "Cancel the alarm" );
end

rule "Cancel the alarm when all the fires have gone 2"
activation-group 'cancel'
when
    not Fire()
    $alarm : Alarm()
then
    delete( $alarm );
    System.out.println( "Cancel the alarm2" );
end

